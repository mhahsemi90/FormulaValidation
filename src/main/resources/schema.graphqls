type Person {
  id: ID!
  code: String!
  firstName: String!
  lastName: String!
}
type Param {
  id: ID!
  code: String!
  title: String!
}
type PersonParamValue {
  id: ID!
  isValid: Boolean!
  value: Float!
  param: Param!
}
type PersonTransaction {
  id: ID!
  type: String!
  person: Person!
  personParamValueList: [PersonParamValue]!
}
type CalculationTransaction {
  id: ID!
  year: String!
  month: String!
  personTransactionList: [PersonTransaction]!
}
type Query {
  allCalculation(id: ID): [CalculationTransaction]
}
type Mutation {
    createPerson(code: String!, firstName: String!, lastName: String!): Person
    createParam(code: String!, title: String!): Param
    createPersonParamValue(isValid: Boolean!, value: Float!, paramId: ID!, personTransactionId: ID!): PersonParamValue
    createPersonTransaction(type: String!, personId: ID!, calculationTransactionId: ID!): PersonTransaction
    createCalculationTransaction(year: String!, month: String!): CalculationTransaction
}
schema {
  query: Query
  mutation: Mutation
}